#!/usr/bin/env python
# coding: utf-8

# # Урок 6. ДЗ
# 
# Для каждого упражнения написать программную реализацию.
# Код пишите в файлах с расширением .py в кодировке UTF-8 (в PyCharm работает по умолчанию). Каждую задачу необходимо сохранять в отдельный файл. Рекомендуем использовать английские имена, например, les_6_task_1, les_6_task_2, и т.д.
# Для оценки «Отлично» необходимо выполнить все требования, указанные в задании и примечаниях.

# ## Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков. 
# - Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
# - Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:

# ### a. выбрать хорошую задачу, которую имеет смысл оценивать по памяти;

# ### b. написать 3 варианта кода (один у вас уже есть);
# проанализировать 3 варианта и выбрать оптимальный;

# ### c. результаты анализа (количество занятой памяти в вашей среде разработки) вставить в виде комментариев в файл с кодом. Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;

# ### d. написать общий вывод: какой из трёх вариантов лучше и почему.
# Надеемся, что вы не испортили программы, добавив в них множество `sys.getsizeof` после каждой переменной, а проявили творчество, фантазию и создали универсальный код для замера памяти.

# In[7]:


import sys

print(f'Версия python: {sys.version}')
print(f'Версия OS: {sys.platform}')

# n = int(input('Сколько элементов сложить: '))
n = 10

item = 1
summa = 0
for i in range(n):
    summa += item
    item /= -2
print(summa)


# In[8]:


print(sys.getsizeof(summa))

